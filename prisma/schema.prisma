generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id              String           @id @default(cuid())
  clerkId         String           @unique
  email           String           @unique
  name            String?
  role            UserRole         @default(MEMBER)
  createdAt       DateTime         @default(now())
  updatedAt       DateTime         @updatedAt
  assetProvisions AssetProvision[]
  knowledge       Knowledge[]
  news            News[]
  openCalls       OpenCall[]
  posts           Post[]
  subsidies       Subsidy[]
  technologies    Technology[]

  @@map("users")
}

model Contest {
  id              String   @id @default(cuid())
  title           String
  description     String?
  imageUrl        String?
  deadline        DateTime?
  startDate       DateTime?
  area            String?     // 国・都道府県
  organizer       String      // 主催者
  organizerType   String?     // 主催者タイプ
  website         String?
  targetArea      String?     // 対象領域
  targetAudience  String?     // 対象者
  incentive       String?     // インセンティブ
  operatingCompany String?    // 運営企業
  isActive        Boolean     @default(true)
  createdAt       DateTime    @default(now())
  updatedAt       DateTime    @updatedAt

  @@map("contests")
}

model Event {
  id                String   @id @default(cuid())
  title             String
  description       String?
  imageUrl          String?
  startDate         DateTime
  endDate           DateTime?
  venue             String?
  area              String?
  organizer         String
  organizerType     String
  website           String?
  targetArea        String?  // 対象領域
  targetAudience    String?  // 対象者
  operatingCompany  String?  // 運営企業
  isActive          Boolean  @default(true)
  createdAt         DateTime @default(now())
  updatedAt         DateTime @updatedAt

  @@map("events")
}

model OpenCall {
  id            String           @id @default(cuid())
  title         String
  description   String?
  content       String?
  imageUrl      String?
  deadline      DateTime?
  startDate     DateTime?
  endDate       DateTime?
  category      OpenCallCategory
  area          String?
  organizer     String
  organizerType String
  amount        String?
  website       String?
  contact       String?
  tags          String?
  isActive      Boolean          @default(true)
  createdAt     DateTime         @default(now())
  updatedAt     DateTime         @updatedAt
  createdBy     String
  createdByUser User             @relation(fields: [createdBy], references: [id])

  @@map("open_calls")
}

model Subsidy {
  id            String          @id @default(cuid())
  title         String
  description   String?
  content       String?
  imageUrl      String?
  deadline      DateTime?
  startDate     DateTime?
  endDate       DateTime?
  category      SubsidyCategory
  area          String?
  organizer     String
  organizerType String
  amount        String?
  website       String?
  contact       String?
  tags          String?
  isActive      Boolean         @default(true)
  createdAt     DateTime        @default(now())
  updatedAt     DateTime        @updatedAt
  createdBy     String
  createdByUser User            @relation(fields: [createdBy], references: [id])

  @@map("subsidies")
}

model News {
  id            String    @id @default(cuid())
  title         String
  description   String?
  content       String?
  imageUrl      String?
  type          NewsType
  company       String
  sector        String?
  amount        String?
  round         String?
  investors     String?
  publishedAt   DateTime?
  source        String?
  sourceUrl     String?
  tags          String?
  isActive      Boolean   @default(true)
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  createdBy     String
  createdByUser User      @relation(fields: [createdBy], references: [id])

  @@map("news")
}

model Knowledge {
  id            String            @id @default(cuid())
  title         String
  description   String?
  content       String
  imageUrl      String?
  category      KnowledgeCategory
  tags          String?
  author        String?
  publishedAt   DateTime?
  isActive      Boolean           @default(true)
  createdAt     DateTime          @default(now())
  updatedAt     DateTime          @updatedAt
  createdBy     String
  createdByUser User              @relation(fields: [createdBy], references: [id])

  @@map("knowledge")
}

model Facility {
  id             String   @id @default(cuid())
  title          String
  description    String?
  imageUrl       String?
  address        String?
  area           String?
  organizer      String
  website        String?
  isActive       Boolean  @default(true)
  createdAt      DateTime @default(now())
  updatedAt      DateTime @updatedAt
  facilityInfo   String?
  program        String?
  targetArea     String?
  targetAudience String?
  organizerType  String

  @@map("facilities")
}

model AssetProvision {
  id            String        @id @default(cuid())
  title         String
  description   String?
  content       String?
  imageUrl      String?
  deadline      DateTime?
  startDate     DateTime?
  endDate       DateTime?
  category      AssetCategory
  area          String?
  organizer     String
  organizerType String
  amount        String?
  website       String?
  contact       String?
  tags          String?
  isActive      Boolean       @default(true)
  createdAt     DateTime      @default(now())
  updatedAt     DateTime      @updatedAt
  createdBy     String
  createdByUser User          @relation(fields: [createdBy], references: [id])

  @@map("asset_provisions")
}

model Technology {
  id            String             @id @default(cuid())
  title         String
  description   String?
  content       String?
  imageUrl      String?
  category      TechnologyCategory
  area          String?
  provider      String
  providerType  String
  website       String?
  contact       String?
  tags          String?
  isActive      Boolean            @default(true)
  createdAt     DateTime           @default(now())
  updatedAt     DateTime           @updatedAt
  createdBy     String
  createdByUser User               @relation(fields: [createdBy], references: [id])

  @@map("technologies")
}

model Post {
  id            String    @id @default(cuid())
  title         String
  description   String?
  content       String
  imageUrl      String?
  category      String?
  tags          String?
  isPublished   Boolean   @default(false)
  publishedAt   DateTime?
  createdAt     DateTime  @default(now())
  updatedAt     DateTime  @updatedAt
  createdBy     String
  createdByUser User      @relation(fields: [createdBy], references: [id])

  @@map("posts")
}

enum UserRole {
  MEMBER
  EDITOR
  ADMIN
}


enum OpenCallCategory {
  PARTNERSHIP
  COLLABORATION
  CHALLENGE
  INNOVATION
  RESEARCH
  OTHER
}

enum SubsidyCategory {
  STARTUP_SUPPORT
  R_AND_D
  EXPORT_SUPPORT
  DIGITAL_TRANSFORMATION
  ENVIRONMENTAL
  REGIONAL_DEVELOPMENT
  EMPLOYMENT
  OTHER
}

enum NewsType {
  FUNDING
  M_AND_A
  IPO
  PARTNERSHIP
  OTHER
}

enum KnowledgeCategory {
  AI
  DEEPTECH
  BIOTECH
  CLEANTECH
  FINTECH
  HEALTHTECH
  EDUTECH
  OTHER
}

enum AssetCategory {
  FUNDING
  EQUIPMENT
  FACILITY
  TECHNOLOGY
  KNOWLEDGE
  NETWORK
  OTHER
}

enum TechnologyCategory {
  AI
  BLOCKCHAIN
  QUANTUM
  BIOTECH
  NANOTECH
  ROBOTICS
  IOT
  CYBERSECURITY
  CLOUD
  OTHER
}
